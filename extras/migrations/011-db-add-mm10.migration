#!/bin/bash

# Add mm10 database with mouse mappings.
#
# Usage:
#   ./011-db-add-mm10.migration [migrate]

COLOR_INFO='\033[32m'
COLOR_WARNING='\033[33m'
COLOR_ERROR='\033[31m'
COLOR_END='\033[0m'

if echo 'show databases;' | mysql -u mutalyzer | grep -q mm10; then
    echo -e "${COLOR_INFO}This migration is not needed.${COLOR_END}"
else
    echo -e "${COLOR_WARNING}This migration is needed.${COLOR_END}"

    if [ "$1" = 'migrate' ]; then
        echo 'Performing migration.'

        echo -e "${COLOR_INFO}Creating mm10 database${COLOR_END}"

        echo "You will now be asked for the MySQL root password"
        # Create databases
        cat << EOF | mysql -u root -p
          CREATE DATABASE mm10;
          GRANT ALL PRIVILEGES ON mm10.* TO mutalyzer@localhost;
          FLUSH PRIVILEGES;
EOF

        if [ $? -ne 0 ]; then
            echo -e "${COLOR_ERROR}Error creating mm10 database, aborting migration.${COLOR_END}"
            exit 1
        fi

        echo -e "${COLOR_INFO}Creating tables in mm10 database${COLOR_END}"

        # Create ChrName and Mapping table (mm10)
        cat << EOF | mysql -u mutalyzer -D mm10
        CREATE TABLE ChrName (
          AccNo char(20) NOT NULL,
          name char(20) NOT NULL,
          organelle_type enum('chromosome','mitochondrion') NOT NULL DEFAULT 'chromosome',
          PRIMARY KEY (AccNo)
        ) ENGINE = MYISAM;
        CREATE TABLE Mapping (
          gene varchar(255) DEFAULT NULL,
          transcript varchar(20) NOT NULL DEFAULT '',
          version smallint(6) DEFAULT NULL,
          selector varchar(255) DEFAULT NULL,
          selector_version smallint(6) DEFAULT NULL,
          chromosome varchar(40) DEFAULT NULL,
          orientation char(1) DEFAULT NULL,
          start int(11) unsigned DEFAULT NULL,
          stop int(11) unsigned DEFAULT NULL,
          cds_start int(11) unsigned DEFAULT NULL,
          cds_stop int(11) unsigned DEFAULT NULL,
          exon_starts longblob NOT NULL,
          exon_stops longblob NOT NULL,
          protein varchar(20) DEFAULT NULL,
          source varchar(20) DEFAULT NULL,
          INDEX (transcript)
        ) ENGINE = MYISAM;
        INSERT INTO ChrName (AccNo, name, organelle_type) VALUES
        ('NC_000067.65', 'chr1', 'chromosome'),
        ('NC_000068.70', 'chr2', 'chromosome'),
        ('NC_000069.60', 'chr3', 'chromosome'),
        ('NC_000070.66', 'chr4', 'chromosome'),
        ('NC_000071.65', 'chr5', 'chromosome'),
        ('NC_000072.60', 'chr6', 'chromosome'),
        ('NC_000073.61', 'chr7', 'chromosome'),
        ('NC_000074.60', 'chr8', 'chromosome'),
        ('NC_000075.60', 'chr9', 'chromosome'),
        ('NC_000076.60', 'chr10', 'chromosome'),
        ('NC_000077.60', 'chr11', 'chromosome'),
        ('NC_000078.60', 'chr12', 'chromosome'),
        ('NC_000079.60', 'chr13', 'chromosome'),
        ('NC_000080.60', 'chr14', 'chromosome'),
        ('NC_000081.60', 'chr15', 'chromosome'),
        ('NC_000082.60', 'chr16', 'chromosome'),
        ('NC_000083.60', 'chr17', 'chromosome'),
        ('NC_000084.60', 'chr18', 'chromosome'),
        ('NC_000085.60', 'chr19', 'chromosome'),
        ('NC_000086.71', 'chrX', 'chromosome'),
        ('NC_000087.74', 'chrY', 'chromosome'),
        ('NC_005089.1', 'chrM', 'mitochondrion');
EOF

        if [ $? -ne 0 ]; then
            echo -e "${COLOR_ERROR}Error creating tables in mm10 database, aborting migration.${COLOR_END}"
            exit 1
        fi

        echo -e "${COLOR_INFO}Populating Mapping table with NCBI data (mm10)${COLOR_END}"

        # Populate Mapping table with UCSC data (mm10)
        MAPPING=$(mktemp)
        wget "ftp://ftp.ncbi.nih.gov/genomes/M_musculus/ARCHIVE/BUILD.38.1/mapview/seq_gene.md.gz" -O - | zcat > $MAPPING
        echo -e "${COLOR_INFO}Importing NCBI mapping data, this may take a few minutes (mm10)${COLOR_END}"
        BIN_MAPPING_UPDATE=$(which mutalyzer-mapping-update)
        $($BIN_MAPPING_UPDATE mm10 $MAPPING 'GRCm38-C57BL/6J')
        rm $MAPPING

        echo -e "${COLOR_INFO}Separate import of NC_005089.1 (chrM) in mm10 database${COLOR_END}"
        BIN_MAPPING_IMPORT=$(which mutalyzer-mapping-import)
        $($BIN_MAPPING_IMPORT reference mm10 NC_005089.1)

        if [ -e /etc/mutalyzer/config ] && $(grep '^dbNames' /etc/mutalyzer/config | grep -q -v mm10); then
            echo -e "${COLOR_INFO}Copying /etc/mutalyzer/config to /etc/mutalyzer/config.backup${COLOR_END}"
            cp /etc/mutalyzer/config /etc/mutalyzer/config.backup
            sed -i 's/^\(dbNames.*\)$/\1, "mm10"/' /etc/mutalyzer/config
            echo -e "${COLOR_INFO}Added mm10 database to /etc/mutalyzer/config${COLOR_END}"
        fi

        echo 'Performed migration.'
    fi
fi
