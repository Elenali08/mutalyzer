This program depends on the following packages:
- mysql-server     >= 5.0.0
- python           >= 2.5.2
- python-mysqldb   >= 1.2.2
- python-biopython >= 1.54
- python-pyparsing >= 1.5.0
- python-configobj >= 4.4.0
- python-simpletal >= 4.1-6
- python-soaplib   >= 2.0.0-alpha1
- python-soappy    >= 0.12.0-2
- python-magic     >= 5.04-2
- python-psutil    >= 0.1.3-1
- python-xlrd      >= 0.6.1-2
- python-daemon	   >= 1.5.5
- python-webpy     >= 0.33
- python-webtest   >= 1.2.3
- python-suds      >= 0.3.9-1

The web and SOAP interfaces depend on the following packages:
- apache2               >= 2.2.11
- libapache2-mod-wsgi   >= 2.8

Add Apache configuration for Mutalyzer. For example, add the following to
the file /etc/apache2/sites-available/mutalyzer (change the path
/var/www/mutalyzer2 when appropriate) and run 'a2ensite mutalyzer'.
---
<VirtualHost *:80>
    ServerName mutalyzer.nl

    WSGIScriptAlias /services /var/www/mutalyzer2/src/webservice.py
    WSGIScriptAlias / /var/www/mutalyzer2/src/wsgi.py

    Alias /base /var/www/mutalyzer2/templates/base
</VirtualHost>
---

After installing MySQL, create a database named ``hg19'', owned by the
user ``mutalyzer'':
---
cat << EOF | mysql -u root -p
  CREATE USER mutalyzer;
  CREATE DATABASE hg19;
  GRANT ALL PRIVILEGES ON hg19.* TO mutalyzer;
  FLUSH PRIVILEGES;
EOF
cat << EOF | mysql -u root -p
  CREATE DATABASE hg18;
  GRANT ALL PRIVILEGES ON hg18.* TO mutalyzer;
  FLUSH PRIVILEGES;
EOF
---
Then retrieve the refLink table from the UCSC website:
wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/refLink.sql
wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/refLink.txt.gz

For Variant_info to work, you need the following files too:
wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/refGene.sql
wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/refGene.txt.gz
wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/gbStatus.sql
wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/gbStatus.txt.gz


And import the table:
---
mysql -u mutalyzer -D hg19 < refLink.sql
zcat refLink.txt.gz | mysql -u mutalyzer -D hg19 -e 'LOAD DATA LOCAL INFILE "/dev/stdin" INTO TABLE refLink;'

---

Combine the mapping info into one table.
---
CREATE TABLE map
  SELECT DISTINCT acc, version, txStart, txEnd, cdsStart, cdsEnd,
                  exonStarts, exonEnds, name2 AS geneName, chrom,
                  strand, protAcc
    FROM gbStatus, refGene, refLink
    WHERE type = "mRNA"
    AND refGene.name = acc
    AND acc = mrnaAcc;
---


For Variant_info:
---
mysql -u mutalyzer -D hg19 < gbStatus.sql
zgrep mRNA gbStatus.txt.gz | mysql -u mutalyzer -D hg19 -e 'LOAD DATA LOCAL INFILE "/dev/stdin" INTO TABLE gbStatus;'
mysql -u mutalyzer -D hg19 < refGene.sql
zcat refGene.txt.gz | mysql -u mutalyzer -D hg19 -e 'LOAD DATA LOCAL INFILE "/dev/stdin" INTO TABLE refGene;'
---

Edit the file mutalyzer.conf to finish the installation.

Take a look at Obsoleted.txt for information about backwards compatibility and
removed features.

Below is the old install.sh script, but it is a bit outdated:

#!/bin/sh

updateCron() {
  cron_entry="$1 python `pwd`/src/$2.py"

  if ! `crontab -l | grep "$cron_entry" > /dev/null`; then
    echo "Updating cron entry."
    if `crontab -l | grep $2 > /dev/null`; then
      echo "Removing old entry."
      crontab -l | grep -v $2 | crontab
    fi
    echo "Installing new entry."
    (
      crontab -l
      echo $cron_entry
    ) | crontab
  fi
}

if `echo $0 | grep '/' > /dev/null`; then
  echo "Please run this script from the installation directory."
  exit 1
fi

updateCron "25 6 \* \* \*" "UCSC_update"
updateCron "*/1 \* \* \* \*" "BatchChecker"

cat << EOF > .htaccess
SetHandler mod_python
PythonHandler src/handler
PythonPath "sys.path + ['`pwd`/src']"
PythonDebug On

RewriteEngine on
RewriteRule Variant_info.php Variant_info
RewriteRule .*bugtracker.* https://www.mutalyzer.nl/projects/mutalyzer2/
EOF

chmod go+rx . src src/Modules templates
chmod go+r .htaccess mutalyzer.conf src/*.py src/Modules/*.py templates/*
chmod go+rw var



What follows is the MySQL database structure for db mutalyzer:

CREATE DATABASE `mutalyzer`

USE `mutalyzer`;

CREATE TABLE `BatchJob` (
  `JobID` char(20) NOT NULL,
  `Filter` char(20) NOT NULL,
  `EMail` char(255) NOT NULL,
  `FromHost` char(255) NOT NULL,
  `JobType` char(20) DEFAULT NULL,
  `Arg1` char(20) DEFAULT NULL,
  PRIMARY KEY (`JobID`)
);

CREATE TABLE `BatchQueue` (
  `QueueID` int(5) NOT NULL AUTO_INCREMENT,
  `JobID` char(20) NOT NULL,
  `Input` char(255) NOT NULL,
  `Flags` char(20) DEFAULT NULL,
  PRIMARY KEY (`QueueID`)
);
CREATE TABLE `GBInfo` (
  `AccNo` char(20) NOT NULL DEFAULT '',
  `GI` char(13) DEFAULT NULL,
  `hash` char(32) NOT NULL DEFAULT '',
  `ChrAccVer` char(20) DEFAULT NULL,
  `ChrStart` int(12) DEFAULT NULL,
  `ChrStop` int(12) DEFAULT NULL,
  `orientation` int(2) DEFAULT NULL,
  `url` char(255) DEFAULT NULL,
  PRIMARY KEY (`AccNo`),
  UNIQUE KEY `hash` (`hash`),
  UNIQUE KEY `alias` (`GI`)
);

CREATE TABLE `Link` (
  `mrnaAcc` char(20) NOT NULL,
  `protAcc` char(20) NOT NULL,
  PRIMARY KEY (`mrnaAcc`),
  UNIQUE KEY `protAcc` (`protAcc`)
);

CREATE TABLE `mm1` (
  `hg18` char(50) DEFAULT NULL,
  `hg19` char(50) DEFAULT NULL
);
CREATE TABLE `mm2` (
  `hg18` char(50) DEFAULT NULL,
  `hg19` char(50) DEFAULT NULL
);
